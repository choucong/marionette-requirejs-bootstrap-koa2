exports.index = function*() {

  var res = yield function(callback) {
    setTimeout(function() {
      callback(0, {
        code: 0,
        message: 'hello reactjs, I am from server !!!'
      })
    }, 1000);
  };

  this.body = res;
}

exports.activity = function*() {
  var res = yield function(callback) {
    setTimeout(function() {
      callback(0, {
        "activities": [{
          "category": "bbox",
          "otime": "2016-01-29",
          "thumb_src": "",
          "mdContent": "## 大纲\n\n### 概述\n\n### 关于开发\n\n### 收获\n\n## 现场热图\n\n![](http://bizfe.meilishuo.com/sfiles/P60129-181529.jpg)\n\n![](http://bizfe.meilishuo.com/sfiles/P60129-181533.jpg)\n\n![](http://bizfe.meilishuo.com/sfiles/P60129-183931.jpg)\n\n![](http://bizfe.meilishuo.com/sfiles/P60129-183203.jpg)\n\n\n## 问题\n1. https页面怎么请求cdn(http)上的script?\n \n 通过支付模块node层代理一下\n\n2. 上线顺序问题？\n\n 由于使用了cdn，所以必须先上静态文件源站\n\n",
          "resource": "http://bizfe.meilishuo.com/sfiles/Biu.pptx",
          "creator": "郭艳明",
          "participants": [
            "yanmingguo@meilishuo.com",
            "qiyaoshen@meilishuo.com",
            "lizhaoliu@meilishuo.com"
          ],
          "title": "order-refact",
          "htmlContent": "<h2 id=\"-\">大纲</h2>\n<h3 id=\"-\">概述</h3>\n<h3 id=\"-\">关于开发</h3>\n<h3 id=\"-\">收获</h3>\n<h2 id=\"-\">现场热图</h2>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60129-181529.jpg\" alt=\"\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60129-181533.jpg\" alt=\"\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60129-183931.jpg\" alt=\"\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60129-183203.jpg\" alt=\"\"></p>\n<h2 id=\"-\">问题</h2>\n<ol>\n<li><p>https页面怎么请求cdn(http)上的script?</p>\n<pre><code> 通过支付模块node层代理一下\n</code></pre></li>\n<li><p>上线顺序问题？</p>\n<pre><code> 由于使用了cdn，所以必须先上静态文件源站\n</code></pre></li>\n</ol>\n",
          "updateTime": 1454066309455,
          "host": "琦耀",
          "tag": "FE",
          "formatDate": "2016-1-29 19:18:455",
          "__v": 0,
          "address": "波普",
          "_id": {
            "$oid": "56ab13d8b33add4a9f1df924"
          },
          "createTime": 1454052312919,
          "act_title": "公用侧边浮层",
          "desc": ""
        }, {
          "category": "bbox",
          "otime": "2016-01-22",
          "thumb_src": "",
          "mdContent": "## 内容大纲\n1、技术框架\n \n 概述\n 体现 -- mtheme怎么发挥作用\n\n2、CSS组件\n \n 如何编写一个组件\n 如何改造一个组件\n\n3、从shop4.0看项目流程\n \n 概述\n 关于设计\n 关于评审\n 关于开发\n 关于测试\n 关于上线\n 关于反馈\n \n## 现场热图\n![](http://bizfe.meilishuo.com/sfiles/P60122-173251.jpg)\n\n\n![](http://bizfe.meilishuo.com/sfiles/P60122-173243.jpg)",
          "resource": "http://bizfe.meilishuo.com/agg/slide?doc=slides/howtogetui4#/",
          "creator": "郭艳明",
          "participants": [
            "yanmingguo@meilishuo.com"
          ],
          "title": "shop4-refact",
          "htmlContent": "<h2 id=\"-\">内容大纲</h2>\n<p>1、技术框架</p>\n<pre><code>概述\n体现 -- mtheme怎么发挥作用\n</code></pre><p>2、CSS组件</p>\n<pre><code>如何编写一个组件\n如何改造一个组件\n</code></pre><p>3、从shop4.0看项目流程</p>\n<pre><code>概述\n关于设计\n关于评审\n关于开发\n关于测试\n关于上线\n关于反馈\n</code></pre><h2 id=\"-\">现场热图</h2>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60122-173251.jpg\" alt=\"\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60122-173243.jpg\" alt=\"\"></p>\n",
          "updateTime": 1454050723745,
          "host": "鹏飞",
          "tag": "FE",
          "formatDate": "2016-1-29 14:58:745",
          "__v": 0,
          "address": "波普",
          "_id": {
            "$oid": "56ab0d503f4641449f362c41"
          },
          "createTime": 1454050640991,
          "act_title": "shop优化-从UI3到UI4",
          "desc": ""
        }, {
          "category": "bbox",
          "otime": "2016-01-08",
          "thumb_src": "http://bizfe.meilishuo.com/sfiles/fe/%E5%B0%81%E9%9D%A2.png",
          "mdContent": "# React Native实践\n\n### 内容大纲\n\n1. 当前实现\n2. RN工作原理\n3. 上线流程\n4. 填坑记录\n5. 开发方式\n6. TODO\n\n\n### 现场热图\n![开篇](http://bizfe.meilishuo.com/sfiles/P60108-183729.jpg)\n\n![](http://bizfe.meilishuo.com/sfiles/P60108-183743.jpg)\n\n![](http://bizfe.meilishuo.com/sfiles/P60108-183820.jpg)\n\n![](http://bizfe.meilishuo.com/sfiles/P60108-183859.jpg)\n\n![](http://bizfe.meilishuo.com/sfiles/P60108-185611.jpg)\n\n### QA\n1. javascriptCore 是啥\n 手机系统提供的javascript engine\n\n2. 模块配置表的作用\n\n js代码通过javascript engine 于 OC通信，通信是通过配置表来进行的。\n \n3. react-native的样式怎么写\n \n 通过js的方式书写\n\n### Reference\n\n1. http://blog.cnbang.net/tech/2698/\n",
          "resource": "http://bizfe.meilishuo.com/sfiles/fe/RN%E5%AE%9E%E8%B7%B5%E5%88%86%E4%BA%AB.key",
          "creator": "郭敬泽",
          "participants": [
            "jingzeguo@meilishuo.com",
            "yanmingguo@meilishuo.com",
            "luhan@meilishuo.com",
            "weiliexiong@meilishuo.com",
            "xianliezhao@meilishuo.com"
          ],
          "title": "react-native-huahua",
          "htmlContent": "<h1 id=\"react-native-\">React Native实践</h1>\n<h3 id=\"-\">内容大纲</h3>\n<ol>\n<li>当前实现</li>\n<li>RN工作原理</li>\n<li>上线流程</li>\n<li>填坑记录</li>\n<li>开发方式</li>\n<li>TODO</li>\n</ol>\n<h3 id=\"-\">现场热图</h3>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60108-183729.jpg\" alt=\"开篇\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60108-183743.jpg\" alt=\"\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60108-183820.jpg\" alt=\"\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60108-183859.jpg\" alt=\"\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/sfiles/P60108-185611.jpg\" alt=\"\"></p>\n<h3 id=\"qa\">QA</h3>\n<ol>\n<li><p>javascriptCore 是啥</p>\n<pre><code> 手机系统提供的javascript engine\n</code></pre></li>\n<li><p>模块配置表的作用</p>\n<pre><code> js代码通过javascript engine 于 OC通信，通信是通过配置表来进行的。\n</code></pre></li>\n<li><p>react-native的样式怎么写</p>\n<pre><code> 通过js的方式书写\n</code></pre></li>\n</ol>\n<h3 id=\"reference\">Reference</h3>\n<ol>\n<li><a href=\"http://blog.cnbang.net/tech/2698/\">http://blog.cnbang.net/tech/2698/</a></li>\n</ol>\n",
          "updateTime": 1452252090666,
          "host": "敬泽",
          "tag": "",
          "formatDate": "2016-1-8 19:21:666",
          "__v": 0,
          "address": "28F-波普",
          "_id": {
            "$oid": "568f305d856778352e681256"
          },
          "createTime": 1452224605517,
          "act_title": "React Native实践",
          "desc": "简要介绍React Native的工作原理，以及新版iOS花花店铺页的开发方式"
        }, {
          "category": "bbox",
          "otime": "2015-12-25",
          "thumb_src": "http://bizfe.meilishuo.com/sfiles/yytest.png",
          "mdContent": "Web应用组件化-样式方案探索\n\n1.组件化\n\n2.原始的方式组织css\n\n3.采用css in javascript的形式\n\n4.采用 css modules的形式\n\n",
          "resource": "http://fexnotes.com/slides#0",
          "creator": "郭艳明",
          "participants": [
            "yanmingguo@meilishuo.com",
            "weiliexiong@meilishuo.com"
          ],
          "title": "components-styles",
          "htmlContent": "<p>Web应用组件化-样式方案探索</p>\n<p>1.组件化</p>\n<p>2.原始的方式组织css</p>\n<p>3.采用css in javascript的形式</p>\n<p>4.采用 css modules的形式</p>\n",
          "updateTime": 1451042665786,
          "host": "艳明",
          "tag": "FE",
          "formatDate": "2015-12-25 19:24:786",
          "__v": 0,
          "address": "波普",
          "_id": {
            "$oid": "567d2769691c1bc68b89deb3"
          },
          "createTime": 1451042665786,
          "act_title": "组件化样式探索",
          "desc": ""
        }, {
          "category": "bbox",
          "otime": "2015-12-18",
          "thumb_src": "",
          "mdContent": "#业务背景（系统介绍）\n## 几个统计\n###1.活动后台管理模块（by 金谭）\n![789](http://bizfe.meilishuo.com/md-imgs/af0a79f1a1cd635e99024825acd4a516.jpg)\n###2. 活动报名条件（by 黄帅）\n![enter image description here](http://bizfe.meilishuo.com/md-imgs/2658b3297b2e21ec013368436fcf6387.jpg \"campaign_info校验层级\")\n![enter image description here](http://bizfe.meilishuo.com/md-imgs/1dbb7626818667a57e8835c6badced39.jpg \"campaign_info校验层级\")\n###3. works后台接口 （by 董鹏）\n![123](http://bizfe.meilishuo.com/md-imgs/ac4186d2a32fa111f4ab430534ecef52.png)\n![456](http://bizfe.meilishuo.com/md-imgs/ad323fe55589b7584c3eaeaa76c686f8.png)\n###4. 任务分类统计 （by 黄帅）\n![333](http://bizfe.meilishuo.com/md-imgs/075924e6080acdbe63800475455d96c4.jpg)\n##问题与思考\n###问题1：活动管理后台业务需求与变更频繁，外部驱动性强\n思考与解决办法：产品与开发的目标应该是一致的。正确看待，加强协调联动。与产品组固定每周四需求讨论。\n###问题2：活动管理后台已经形成系统，不再是一个单点工具，而且使用方还在不断扩大。\n思考与解决办法：现有的前端展现形式及一些体验不满足系统性需要，做前端重构。\n###问题3：可用性、交互性差，白名单导入功能操作繁琐，审核、入会场功能响应慢。\n思考与解决方法：后端接口处理存在可优化空间，做后端重构。\n###问题4：代码结构单一，程序冗长，在频繁的业务需求下，影响开发效率。\n思考与解决方法：后端重构。\n##总结\n除了第一项之外，其他几项，都需要通过重构来解决。\n\n#重构计划\n##目标\n通过重构提高运营使用效率，满足日后可能的系统性要求。\n##方案\n###1.上层业务（smarty、后端逻辑层）做结构调整，满足高效开发的需要。\n###2.导白名单、商品审核部分，做异步处理。\n###2.底层接口重写，迁入phenix，向服务化改造。\n![444](http://bizfe.meilishuo.com/md-imgs/45ae6a376a274e0ceddec3b231d3f764.png)",
          "resource": "",
          "creator": "董鹏",
          "participants": [
            "yanmingguo@meilishuo.com",
            "pengfeihuang@meilishuo.com"
          ],
          "title": "work_backstage_old",
          "htmlContent": "<h1 id=\"-\">业务背景（系统介绍）</h1>\n<h2 id=\"-\">几个统计</h2>\n<h3 id=\"1-by-\">1.活动后台管理模块（by 金谭）</h3>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/af0a79f1a1cd635e99024825acd4a516.jpg\" alt=\"789\"></p>\n<h3 id=\"2-by-\">2. 活动报名条件（by 黄帅）</h3>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/2658b3297b2e21ec013368436fcf6387.jpg\" alt=\"enter image description here\" title=\"campaign_info校验层级\">\n<img src=\"http://bizfe.meilishuo.com/md-imgs/1dbb7626818667a57e8835c6badced39.jpg\" alt=\"enter image description here\" title=\"campaign_info校验层级\"></p>\n<h3 id=\"3-works-by-\">3. works后台接口 （by 董鹏）</h3>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/ac4186d2a32fa111f4ab430534ecef52.png\" alt=\"123\">\n<img src=\"http://bizfe.meilishuo.com/md-imgs/ad323fe55589b7584c3eaeaa76c686f8.png\" alt=\"456\"></p>\n<h3 id=\"4-by-\">4. 任务分类统计 （by 黄帅）</h3>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/075924e6080acdbe63800475455d96c4.jpg\" alt=\"333\"></p>\n<h2 id=\"-\">问题与思考</h2>\n<h3 id=\"-1-\">问题1：活动管理后台业务需求与变更频繁，外部驱动性强</h3>\n<p>思考与解决办法：产品与开发的目标应该是一致的。正确看待，加强协调联动。与产品组固定每周四需求讨论。</p>\n<h3 id=\"-2-\">问题2：活动管理后台已经形成系统，不再是一个单点工具，而且使用方还在不断扩大。</h3>\n<p>思考与解决办法：现有的前端展现形式及一些体验不满足系统性需要，做前端重构。</p>\n<h3 id=\"-3-\">问题3：可用性、交互性差，白名单导入功能操作繁琐，审核、入会场功能响应慢。</h3>\n<p>思考与解决方法：后端接口处理存在可优化空间，做后端重构。</p>\n<h3 id=\"-4-\">问题4：代码结构单一，程序冗长，在频繁的业务需求下，影响开发效率。</h3>\n<p>思考与解决方法：后端重构。</p>\n<h2 id=\"-\">总结</h2>\n<p>除了第一项之外，其他几项，都需要通过重构来解决。</p>\n<h1 id=\"-\">重构计划</h1>\n<h2 id=\"-\">目标</h2>\n<p>通过重构提高运营使用效率，满足日后可能的系统性要求。</p>\n<h2 id=\"-\">方案</h2>\n<h3 id=\"1-smarty-\">1.上层业务（smarty、后端逻辑层）做结构调整，满足高效开发的需要。</h3>\n<h3 id=\"2-\">2.导白名单、商品审核部分，做异步处理。</h3>\n<h3 id=\"2-phenix-\">2.底层接口重写，迁入phenix，向服务化改造。</h3>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/45ae6a376a274e0ceddec3b231d3f764.png\" alt=\"444\"></p>\n",
          "updateTime": 1450427813122,
          "host": "董鹏",
          "tag": "",
          "formatDate": "2015-12-18 16:36:122",
          "__v": 0,
          "address": "",
          "_id": {
            "$oid": "5673c5a5c5df05ad5f9e0998"
          },
          "createTime": 1450427813122,
          "act_title": "活动管理works后台重构",
          "desc": ""
        }, {
          "category": "bbox",
          "otime": "2015-12-11",
          "thumb_src": "http://bizfe.meilishuo.com/md-imgs/7b1f72b90b620ad5796f7213da0a13f4.png",
          "mdContent": "###大纲\n\n见链接： http://bizfe.meilishuo.com/agg?name=zhaoshang&doc=zhaoshang/why\n\n\n### 现场热图\n\n![P51211-184012](http://bizfe.meilishuo.com/md-imgs/ba49c7ca178b767b1a87ce50f6a57fd2.jpg)\n\n![P51211-183611](http://bizfe.meilishuo.com/md-imgs/f2955bdccb786cd6638ef4fe84d0e1b2.jpg)\n\n![P51211-183626](http://bizfe.meilishuo.com/md-imgs/7a1f5cd9fca4cb1c2148b83d0474866f.jpg)\n\n![P51211-183634](http://bizfe.meilishuo.com/md-imgs/753d182c0e3a6c15219bbb3dc7c0aaf3.jpg)\n\n\n### QA\n1. 多表级联查询怎么处理？\n 一般不再sql上做联表处理，而是通过程序来处理。比如执行多条sql，然后数据聚合处理。\n\n2. 数据cache怎么做？\n \n table目录中有cache目录进行处理，在查询的时候先从cache获取，获取失败则调用DB。更新数据时先更新DB再更新cache\n\n3. mc中的key怎么保证唯一性\n 根据命名空间，如：模块id + 接口；\n\n4. cache的使用的选择，是mc or redis\n \n 不得而知，请@赵老板答疑解惑。\n ",
          "resource": "http://bizfe.meilishuo.com/agg?name=zhaoshang&doc=zhaoshang/why",
          "creator": "郭艳明",
          "participants": [
            "yanmingguo@meilishuo.com",
            "pengfeihuang@meilishuo.com"
          ],
          "title": "php-dev",
          "htmlContent": "<h3 id=\"-\">大纲</h3>\n<p>见链接： <a href=\"http://bizfe.meilishuo.com/agg?name=zhaoshang&amp;doc=zhaoshang/why\">http://bizfe.meilishuo.com/agg?name=zhaoshang&amp;doc=zhaoshang/why</a></p>\n<h3 id=\"-\">现场热图</h3>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/ba49c7ca178b767b1a87ce50f6a57fd2.jpg\" alt=\"P51211-184012\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/f2955bdccb786cd6638ef4fe84d0e1b2.jpg\" alt=\"P51211-183611\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/7a1f5cd9fca4cb1c2148b83d0474866f.jpg\" alt=\"P51211-183626\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/753d182c0e3a6c15219bbb3dc7c0aaf3.jpg\" alt=\"P51211-183634\"></p>\n<h3 id=\"qa\">QA</h3>\n<ol>\n<li><p>多表级联查询怎么处理？</p>\n<pre><code> 一般不再sql上做联表处理，而是通过程序来处理。比如执行多条sql，然后数据聚合处理。\n</code></pre></li>\n<li><p>数据cache怎么做？</p>\n<pre><code> table目录中有cache目录进行处理，在查询的时候先从cache获取，获取失败则调用DB。更新数据时先更新DB再更新cache\n</code></pre></li>\n<li><p>mc中的key怎么保证唯一性</p>\n<pre><code> 根据命名空间，如：模块id + 接口；\n</code></pre></li>\n<li><p>cache的使用的选择，是mc or redis</p>\n<pre><code> 不得而知，请@赵老板答疑解惑。\n</code></pre></li>\n</ol>\n",
          "updateTime": 1449831682823,
          "host": "文琪",
          "tag": "FE",
          "formatDate": "2015-12-11 19:1:823",
          "__v": 0,
          "address": "波普",
          "_id": {
            "$oid": "566aad02f952bb869dca2687"
          },
          "createTime": 1449831682823,
          "act_title": "招商中心改版",
          "desc": ""
        }, {
          "category": "bbox",
          "otime": "2015-12-04",
          "thumb_src": "http://bizfe.meilishuo.com/sfiles/junjie.png",
          "mdContent": "### 内容大纲\n1. 移动开发ABC\n2. 移动开发采坑记\n3. 移动开发调试篇\n\n### 现场热图\n![P51204-184651](http://bizfe.meilishuo.com/md-imgs/6236bf888e78e716cc47f561a42a12e5.jpg)\n\n![P51204-184703](http://bizfe.meilishuo.com/md-imgs/64ebb27bc79d6ce3186af1da0f59376b.jpg)\n\n![P51204-185953](http://bizfe.meilishuo.com/md-imgs/695f79035cbd05b076a2578e4eb507c2.jpg)\n\n![P51204-190950](http://bizfe.meilishuo.com/md-imgs/e9970ae6cb079e8aa0cabee297ef2335.jpg)\n\n![P51204-185023](http://bizfe.meilishuo.com/md-imgs/7f0e5716e6a44b9292e4e2c7c83ea429.jpg)\n\n\n### QA\n# marked\n\n> A full-featured markdown parser and compiler, written in JavaScript. Built\n> for speed.\n\n[![NPM version](https://badge.fury.io/js/marked.png)][badge]\n\n## Install\n\n``` bash\nnpm install marked --save\n```\n\n## Usage\n\nMinimal usage:\n\n```js\nvar marked = require('marked');\nconsole.log(marked('I am using __markdown__.'));\n// Outputs: <p>I am using <strong>markdown</strong>.</p>\n```\n\nExample setting options with default values:\n\n```js\nvar marked = require('marked');\nmarked.setOptions({\n renderer: new marked.Renderer(),\n gfm: true,\n tables: true,\n breaks: false,\n pedantic: false,\n sanitize: true,\n smartLists: true,\n smartypants: false\n});\n\nconsole.log(marked('I am using __markdown__.'));\n```\n\n### Browser\n\n```html\n<!doctype html>\n<html>\n<head>\n <meta charset=\"utf-8\"/>\n <title>Marked in the browser</title>\n <script src=\"lib/marked.js\"></script>\n</head>\n<body>\n <div id=\"content\"></div>\n <script>\n document.getElementById('content').innerHTML =\n marked('# Marked in browser\\n\\nRendered by **marked**.');\n </script>\n</body>\n</html>\n```\n\n## marked(markdownString [,options] [,callback])\n\n### markdownString\n\nType: `string`\n\nString of markdown source to be compiled.\n\n### options\n\nType: `object`\n\nHash of options. Can also be set using the `marked.setOptions` method as seen\nabove.\n\n### callback\n\nType: `function`\n\nFunction called when the `markdownString` has been fully parsed when using\nasync highlighting. If the `options` argument is omitted, this can be used as\nthe second argument.\n\n## Options\n\n### highlight\n\nType: `function`\n\nA function to highlight code blocks. The first example below uses async highlighting with\n[node-pygmentize-bundled][pygmentize], and the second is a synchronous example using\n[highlight.js][highlight]:\n\n```js\nvar marked = require('marked');\n\nvar markdownString = '```js\\n console.log(\"hello\"); \\n```';\n\n// Async highlighting with pygmentize-bundled\nmarked.setOptions({\n highlight: function (code, lang, callback) {\n require('pygmentize-bundled')({ lang: lang, format: 'html' }, code, function (err, result) {\n callback(err, result.toString());\n });\n }\n});\n\n// Using async version of marked\nmarked(markdownString, function (err, content) {\n if (err) throw err;\n console.log(content);\n});\n\n// Synchronous highlighting with highlight.js\nmarked.setOptions({\n highlight: function (code) {\n return require('highlight.js').highlightAuto(code).value;\n }\n});\n\nconsole.log(marked(markdownString));\n```\n\n#### highlight arguments\n\n`code`\n\nType: `string`\n\nThe section of code to pass to the highlighter.\n\n`lang`\n\nType: `string`\n\nThe programming language specified in the code block.\n\n`callback`\n\nType: `function`\n\nThe callback function to call when using an async highlighter.\n\n### renderer\n\nType: `object`\nDefault: `new Renderer()`\n\nAn object containing functions to render tokens to HTML.\n\n#### Overriding renderer methods\n\nThe renderer option allows you to render tokens in a custom manner. Here is an\nexample of overriding the default heading token rendering by adding an embedded anchor tag like on GitHub:\n\n```javascript\nvar marked = require('marked');\nvar renderer = new marked.Renderer();\n\nrenderer.heading = function (text, level) {\n var escapedText = text.toLowerCase().replace(/[^\\w]+/g, '-');\n\n return '<h' + level + '><a name=\"' +\n escapedText +\n '\" class=\"anchor\" href=\"#' +\n escapedText +\n '\"><span class=\"header-link\"></span></a>' +\n text + '</h' + level + '>';\n},\n\nconsole.log(marked('# heading+', { renderer: renderer }));\n```\nThis code will output the following HTML:\n```html\n<h1>\n <a name=\"heading-\" class=\"anchor\" href=\"#heading-\">\n <span class=\"header-link\"></span>\n </a>\n heading+\n</h1>\n```\n\n#### Block level renderer methods\n\n- code(*string* code, *string* language)\n- blockquote(*string* quote)\n- html(*string* html)\n- heading(*string* text, *number* level)\n- hr()\n- list(*string* body, *boolean* ordered)\n- listitem(*string* text)\n- paragraph(*string* text)\n- table(*string* header, *string* body)\n- tablerow(*string* content)\n- tablecell(*string* content, *object* flags)\n\n`flags` has the following properties:\n\n```js\n{\n header: true || false,\n align: 'center' || 'left' || 'right'\n}\n```\n\n#### Inline level renderer methods\n\n- strong(*string* text)\n- em(*string* text)\n- codespan(*string* code)\n- br()\n- del(*string* text)\n- link(*string* href, *string* title, *string* text)\n- image(*string* href, *string* title, *string* text)\n\n### gfm\n\nType: `boolean`\nDefault: `true`\n\nEnable [GitHub flavored markdown][gfm].\n\n### tables\n\nType: `boolean`\nDefault: `true`\n\nEnable GFM [tables][tables].\nThis option requires the `gfm` option to be true.\n\n### breaks\n\nType: `boolean`\nDefault: `false`\n\nEnable GFM [line breaks][breaks].\nThis option requires the `gfm` option to be true.\n\n### pedantic\n\nType: `boolean`\nDefault: `false`\n\nConform to obscure parts of `markdown.pl` as much as possible. Don't fix any of\nthe original markdown bugs or poor behavior.\n\n### sanitize\n\nType: `boolean`\nDefault: `false`\n\nSanitize the output. Ignore any HTML that has been input.\n\n### smartLists\n\nType: `boolean`\nDefault: `true`\n\nUse smarter list behavior than the original markdown. May eventually be\ndefault with the old behavior moved into `pedantic`.\n\n### smartypants\n\nType: `boolean`\nDefault: `false`\n\nUse \"smart\" typograhic punctuation for things like quotes and dashes.\n\n## Access to lexer and parser\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(text, options);\nconsole.log(marked.parser(tokens));\n```\n\n``` js\nvar lexer = new marked.Lexer(options);\nvar tokens = lexer.lex(text);\nconsole.log(tokens);\nconsole.log(lexer.rules);\n```\n\n## CLI\n\n``` bash\n$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n<p>hello world</p>\n```\n\n## Philosophy behind marked\n\nThe point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.\n\nmarked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.\n\nmarked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.\n\nAlong with implementing every markdown feature, marked also implements [GFM\nfeatures][gfmf].\n\n## Benchmarks\n\nnode v0.8.x\n\n``` bash\n$ node test --bench\nmarked completed in 3411ms.\nmarked (gfm) completed in 3727ms.\nmarked (pedantic) completed in 3201ms.\nrobotskirt completed in 808ms.\nshowdown (reuse converter) completed in 11954ms.\nshowdown (new converter) completed in 17774ms.\nmarkdown-js completed in 17191ms.\n```\n\n__Marked is now faster than Discount, which is written in C.__\n\nFor those feeling skeptical: These benchmarks run the entire markdown test suite 1000 times. The test suite tests every feature. It doesn't cater to specific aspects.\n\n### Pro level\n\nYou also have direct access to the lexer and parser if you so desire.\n\n``` js\nvar tokens = marked.lexer(text, options);\nconsole.log(marked.parser(tokens));\n```\n\n``` js\nvar lexer = new marked.Lexer(options);\nvar tokens = lexer.lex(text);\nconsole.log(tokens);\nconsole.log(lexer.rules);\n```\n\n``` bash\n$ node\n> require('marked').lexer('> i am using marked.')\n[ { type: 'blockquote_start' },\n { type: 'paragraph',\n text: 'i am using marked.' },\n { type: 'blockquote_end' },\n links: {} ]\n```\n\n## Running Tests & Contributing\n\nIf you want to submit a pull request, make sure your changes pass the test\nsuite. If you're adding a new feature, be sure to add your own test.\n\nThe marked test suite is set up slightly strangely: `test/new` is for all tests\nthat are not part of the original markdown.pl test suite (this is where your\ntest should go if you make one). `test/original` is only for the original\nmarkdown.pl tests. `test/tests` houses both types of tests after they have been\ncombined and moved/generated by running `node test --fix` or `marked --test\n--fix`.\n\nIn other words, if you have a test to add, add it to `test/new/` and then\nregenerate the tests with `node test --fix`. Commit the result. If your test\nuses a certain feature, for example, maybe it assumes GFM is *not* enabled, you\ncan add `.nogfm` to the filename. So, `my-test.text` becomes\n`my-test.nogfm.text`. You can do this with any marked option. Say you want\nline breaks and smartypants enabled, your filename should be:\n`my-test.breaks.smartypants.text`.\n\nTo run the tests:\n\n``` bash\ncd marked/\nnode test\n```\n\n### Contribution and License Agreement\n\nIf you contribute code to this project, you are implicitly allowing your code\nto be distributed under the MIT license. You are also implicitly verifying that\nall code is your original work. `</legalese>`\n\n## License\n\nCopyright (c) 2011-2014, Christopher Jeffrey. (MIT License)\n\nSee LICENSE for more info.\n\n[gfm]: https://help.github.com/articles/github-flavored-markdown\n[gfmf]: http://github.github.com/github-flavored-markdown/\n[pygmentize]: https://github.com/rvagg/node-pygmentize-bundled\n[highlight]: https://github.com/isagalaev/highlight.js\n[badge]: http://badge.fury.io/js/marked\n[tables]: https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#wiki-tables\n[breaks]: https://help.github.com/articles/github-flavored-markdown#newlines\n\n| 对象 | 属性/索引 | 描述 | 例子 |\n| ------------- | ------------- |------------- |------------- |\n| result | [0] | 正则表达式最后的匹配项 | dbBd |\n| <code>[1], ...[<i>n</i>]</code> | 子表达式匹配项 |<code>[1] = bB<br>[2] = d</code>| |\n| index | 第一个匹配项在原字符串中的索引 | <code>1</code> | [2] = d | \n| input | 方法输入的参数字符串 | <code>cdbBdbsbz</code> | |\n| <code>re</code> | <code>lastIndex</code> | 下一次执行匹配开始索引的位置. |<code>5</code> |\n| <code>re</code> | ignoreCase | 指\"<code>i</code>\" 标识是否启用 |<code>true</code> |\n| <code>re</code> | global |指\"<code>g</code>\" 标识是否启用 |<code>true</code> |\n| <code>re</code> | multiline |指\"<code>m</code>\" 标识是否启用|<code>false</code> |\n| <code>re</code> | source |正则表达式的文本表示|<code>d(b+)(d)</code> |\n\n\n\n\n```php\n<?php\n\n/**\n * @监控队列长度脚本\n *\n * @author haitaoguo\n *\n * @date 2015-09-01\n */\nnamespace Mlservice\\Script\\Campaign;\n\n\nuse Mlservice\\Package\\Model\\ModelQueue;\nuse Mlservice\\Package\\Model\\ModelCleanCache;\n\nclass Monitor extends \\Framework\\FrameworkScript {\n public static $log_file = 'script_consume_campaign_log';\n public static $mailList = 'rd-mall@meilishuo.com';\n\n\n const CAMPAIGN_LIST = 1;//清理活动缓存队列\n\n\n const CAMPAIGN_DELAY = 2;//延迟清理活动活动队列\n\n const SALE_LIST=3;//销量脚本监控\n\n const INVENTORY_LIST=4;//库存队列脚本监控\n\n const CAMPAIGN_LONG = 5;//延迟清理活动活动队列 30分钟\n\n const CAMPAIGN_CHECK = 6;//延迟清理活动活动队列 30分钟\n /**\n *\n * @var array\n */\n private static $arr_conf = array(\n self::CAMPAIGN_LIST => array(\n //llen => 脚本 个数\n 'conf' => array(\n 500 => 2,\n 1000 => 4,\n 2000 => 6,\n 3000 => 8,\n 999999999 => 10,\n\n ),\n 'cmd' => array(\n 'cnt_cmd' => 'ps -ef| grep -v grep | grep \"script.php\" | grep \"campaign\" |grep \"Consume_campaign_list\" | wc -l',\n 'pid_cmd' => \"ps x| grep -v grep | grep 'script.php' | grep 'campaign'|grep 'Consume_campaign_list' |awk '{print $1}'\",\n 'run_cmd' => '/home/service/php/bin/php /home/work/mlservice/goods/public/script.php campaign\\\\\\Consume_campaign_list > /dev/null & ',\n ),\n 'type'=>1,//启动进程\n 'mix' => 5000,\n 'msg'=>'活动更新队列超过阈值5000，请查看',\n\n ),\n self::CAMPAIGN_DELAY => array(\n //llen => 脚本 个数\n 'conf' => array(\n 500 => 1,\n 1000 => 2,\n 2000 => 4,\n 3000 => 5,\n 999999999 => 10,\n\n ),\n 'cmd' => array(\n 'cnt_cmd' => 'ps -ef| grep -v grep | grep \"script.php\" | grep \"campaign\" |grep \"Consume_campaign_delay\" | wc -l',\n 'pid_cmd' => \"ps x| grep -v grep | grep 'script.php' | grep 'campaign'|grep 'Consume_campaign_delay' |awk '{print $1}'\",\n 'run_cmd' => '/home/service/php/bin/php /home/work/mlservice/goods/public/script.php campaign\\\\\\Consume_campaign_delay > /dev/null & ',\n ),\n 'type'=>1,//启动进程\n 'mix' => 5000,\n 'msg'=>'延迟活动更新队列超过阈值5000，请查看',\n ),\n self::CAMPAIGN_LONG => array(\n //llen => 脚本 个数\n 'conf' => array(\n 500 => 1,\n 3000 => 2,\n 10000 => 4,\n 30000 => 5,\n 999999999 => 10,\n\n ),\n 'cmd' => array(\n 'cnt_cmd' => 'ps -ef| grep -v grep | grep \"script.php\" | grep \"campaign\" |grep \"Consume_campaign_long\" | wc -l',\n 'pid_cmd' => \"ps x| grep -v grep | grep 'script.php' | grep 'campaign'|grep 'Consume_campaign_long' |awk '{print $1}'\",\n 'run_cmd' => '/home/service/php/bin/php /home/work/mlservice/goods/public/script.php campaign\\\\\\Consume_campaign_long > /dev/null & ',\n ),\n 'type'=>1,//启动进程\n 'mix' => 25000,\n 'msg'=>'延迟活动更新队列超过阈值25000，请查看',\n ),\n self::CAMPAIGN_CHECK => array(\n //llen => 脚本 个数\n 'conf' => array(\n 500 => 1,\n 3000 => 2,\n 10000 => 4,\n 30000 => 5,\n 999999999 => 10,\n\n ),\n 'cmd' => array(\n 'cnt_cmd' => 'ps -ef| grep -v grep | grep \"script.php\" | grep \"campaign\" |grep \"Consume_campaign_check\" | wc -l',\n 'pid_cmd' => \"ps x| grep -v grep | grep 'script.php' | grep 'campaign'|grep 'Consume_campaign_check' |awk '{print $1}'\",\n 'run_cmd' => '/home/service/php/bin/php /home/work/mlservice/goods/public/script.php campaign\\\\\\Consume_campaign_check > /dev/null & ',\n ),\n 'type'=>1,//启动进程\n 'mix' => 25000,\n 'msg'=>'对比价格各个机房数据队列超过阈值25000，请查看',\n ),\n self::SALE_LIST => array(\n 'mix' => 5000,\n 'type'=>2,//只报警\n 'msg'=>'销量更新队列超过阈值5000，请查看',\n ),\n\n self::INVENTORY_LIST => array(\n 'mix' => 25000,\n 'type'=>2,//只报警\n 'msg'=>'库存更新队列超过阈值25000，请查看',\n ),\n );\n\n\n /**\n * 获取队列的长度\n * @param $key\n * @return bool\n */\n private function _get_queue_len($key) {\n switch ($key) {\n case self::CAMPAIGN_LIST:\n return ModelQueue::getCampaignListLen();\n case self::CAMPAIGN_DELAY:\n return ModelQueue::getCampaignDelayListLen();\n case self::CAMPAIGN_LONG:\n return ModelQueue::getCampaignLongListLen();\n case self::CAMPAIGN_CHECK:\n return ModelQueue::getCampaignCheckListLen();\n case self::SALE_LIST:\n return ModelQueue::getSaleListLen();\n case self::INVENTORY_LIST:\n return ModelQueue::getSkuListLen();\n }\n return false;\n\n }\n\n public function run() {\n $this->_init();\n\n\n }\n\n\n public function _init() {\n $cmd = 'ps -ef| grep -v grep | grep \"script.php\" | grep \"campaign\" |grep \"Monitor\" | wc -l';\n\n $res = array();\n exec($cmd, $res);\n $cmd_cnt = intval($res[0]);\n if ($cmd_cnt > 1) {\n exit;\n }\n\n foreach (self::$arr_conf as $key => $v) {\n $list_len = $this->_get_queue_len($key);\n if($list_len>$v['mix']){//报警\n $subjec=$v['msg'];\n $this->sendSm($subjec);\n $this->mailTo('goods服务监控队列报警', $subjec);\n }\n if($v['type']==1){//为1才执行 脚本重启\n $cmd = $v['cmd']['cnt_cmd'];\n $str_pid_cmd = $v['cmd']['pid_cmd'];// \"ps x| grep -v grep | grep 'script.php' | grep 'campaign'|grep 'Consume_campaign_list' |awk '{print $1}'\";\n $str_start_cmd = $v['cmd']['run_cmd'];// \"/home/service/php/bin/php /home/work/mlservice/goods/public/script.php campaign\\\\\\Consume_campaign_list &\";\n $res = array();\n exec($cmd, $res);\n $cmd_cnt = intval($res[0]);\n if ($list_len !== false) {\n $todo_cnt = $this->_init_get_run_count($key, $list_len);\n $c_val = $todo_cnt - $cmd_cnt;\n\n\n if ($c_val > 0) {//需要开启多个 脚本\n for ($i = 0; $i < $c_val; $i++) {\n // echo \"running cmd \\t\" . $str_start_cmd . \"\\n\";\n $str = exec($str_start_cmd);\n // echo $str . \"\\n\";\n\n }\n } else {//脚本太多了 ，需要减少脚本 个数\n $arr_pid = array();\n exec($str_pid_cmd, $arr_pid);\n if (!empty($arr_pid)) {\n $c_val = abs($c_val);\n for ($i = 0; $i < $c_val; $i++) {\n $str_kill = \" kill -9 \" . $arr_pid[$i];\n // echo \"kill cmd :\" . $str_kill . \"\\n\";\n exec($str_kill);\n\n }\n }\n\n }\n\n }\n }\n\n }\n exit;\n\n }\n\n /**\n * 获取需要执行 的脚本个数\n * @param $key\n * @param $list_len\n * @return int\n */\n private function _init_get_run_count($key, $list_len) {\n $last_size = 1;\n $arr_cnf = self::$arr_conf[$key]['conf'];\n foreach ($arr_cnf as $cnt => $len) {\n if ($list_len < $cnt) {\n $last_size = $len;\n break;\n } else {\n $last_size = $len;\n }\n }\n return intval($last_size);\n }\n\n\n}\n```",
          "resource": "http://bizfe.meilishuo.com/sfiles/移动端web开发分享.key",
          "creator": "郭艳明",
          "participants": [
            "yanmingguo@meilishuo.com"
          ],
          "title": "webapp-dev",
          "htmlContent": "<h3 id=\"-\">内容大纲</h3>\n<ol>\n<li>移动开发ABC</li>\n<li>移动开发采坑记</li>\n<li>移动开发调试篇</li>\n</ol>\n<h3 id=\"-\">现场热图</h3>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/6236bf888e78e716cc47f561a42a12e5.jpg\" alt=\"P51204-184651\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/64ebb27bc79d6ce3186af1da0f59376b.jpg\" alt=\"P51204-184703\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/695f79035cbd05b076a2578e4eb507c2.jpg\" alt=\"P51204-185953\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/e9970ae6cb079e8aa0cabee297ef2335.jpg\" alt=\"P51204-190950\"></p>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/7f0e5716e6a44b9292e4e2c7c83ea429.jpg\" alt=\"P51204-185023\"></p>\n<h3 id=\"qa\">QA</h3>\n<h1 id=\"marked\">marked</h1>\n<blockquote>\n<p>A full-featured markdown parser and compiler, written in JavaScript. Built\nfor speed.</p>\n</blockquote>\n<p><a href=\"http://badge.fury.io/js/marked\"><img src=\"https://badge.fury.io/js/marked.png\" alt=\"NPM version\"></a></p>\n<h2 id=\"install\">Install</h2>\n<pre><code class=\"lang-bash\">npm install marked --save\n</code></pre>\n<h2 id=\"usage\">Usage</h2>\n<p>Minimal usage:</p>\n<pre><code class=\"lang-js\">var marked = require('marked');\nconsole.log(marked('I am using __markdown__.'));\n// Outputs: &lt;p&gt;I am using &lt;strong&gt;markdown&lt;/strong&gt;.&lt;/p&gt;\n</code></pre>\n<p>Example setting options with default values:</p>\n<pre><code class=\"lang-js\">var marked = require('marked');\nmarked.setOptions({\n renderer: new marked.Renderer(),\n gfm: true,\n tables: true,\n breaks: false,\n pedantic: false,\n sanitize: true,\n smartLists: true,\n smartypants: false\n});\n\nconsole.log(marked('I am using __markdown__.'));\n</code></pre>\n<h3 id=\"browser\">Browser</h3>\n<pre><code class=\"lang-html\">&lt;!doctype html&gt;\n&lt;html&gt;\n&lt;head&gt;\n &lt;meta charset=\"utf-8\"/&gt;\n &lt;title&gt;Marked in the browser&lt;/title&gt;\n &lt;script src=\"lib/marked.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n &lt;div id=\"content\"&gt;&lt;/div&gt;\n &lt;script&gt;\n document.getElementById('content').innerHTML =\n marked('# Marked in browser\\n\\nRendered by **marked**.');\n &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h2 id=\"marked-markdownstring-options-callback-\">marked(markdownString [,options] [,callback])</h2>\n<h3 id=\"markdownstring\">markdownString</h3>\n<p>Type: <code>string</code></p>\n<p>String of markdown source to be compiled.</p>\n<h3 id=\"options\">options</h3>\n<p>Type: <code>object</code></p>\n<p>Hash of options. Can also be set using the <code>marked.setOptions</code> method as seen\nabove.</p>\n<h3 id=\"callback\">callback</h3>\n<p>Type: <code>function</code></p>\n<p>Function called when the <code>markdownString</code> has been fully parsed when using\nasync highlighting. If the <code>options</code> argument is omitted, this can be used as\nthe second argument.</p>\n<h2 id=\"options\">Options</h2>\n<h3 id=\"highlight\">highlight</h3>\n<p>Type: <code>function</code></p>\n<p>A function to highlight code blocks. The first example below uses async highlighting with\n<a href=\"https://github.com/rvagg/node-pygmentize-bundled\">node-pygmentize-bundled</a>, and the second is a synchronous example using\n<a href=\"https://github.com/isagalaev/highlight.js\">highlight.js</a>:</p>\n<pre><code class=\"lang-js\">var marked = require('marked');\n\nvar markdownString = '```js\\n console.log(\"hello\"); \\n```';\n\n// Async highlighting with pygmentize-bundled\nmarked.setOptions({\n highlight: function (code, lang, callback) {\n require('pygmentize-bundled')({ lang: lang, format: 'html' }, code, function (err, result) {\n callback(err, result.toString());\n });\n }\n});\n\n// Using async version of marked\nmarked(markdownString, function (err, content) {\n if (err) throw err;\n console.log(content);\n});\n\n// Synchronous highlighting with highlight.js\nmarked.setOptions({\n highlight: function (code) {\n return require('highlight.js').highlightAuto(code).value;\n }\n});\n\nconsole.log(marked(markdownString));\n</code></pre>\n<h4 id=\"highlight-arguments\">highlight arguments</h4>\n<p><code>code</code></p>\n<p>Type: <code>string</code></p>\n<p>The section of code to pass to the highlighter.</p>\n<p><code>lang</code></p>\n<p>Type: <code>string</code></p>\n<p>The programming language specified in the code block.</p>\n<p><code>callback</code></p>\n<p>Type: <code>function</code></p>\n<p>The callback function to call when using an async highlighter.</p>\n<h3 id=\"renderer\">renderer</h3>\n<p>Type: <code>object</code>\nDefault: <code>new Renderer()</code></p>\n<p>An object containing functions to render tokens to HTML.</p>\n<h4 id=\"overriding-renderer-methods\">Overriding renderer methods</h4>\n<p>The renderer option allows you to render tokens in a custom manner. Here is an\nexample of overriding the default heading token rendering by adding an embedded anchor tag like on GitHub:</p>\n<pre><code class=\"lang-javascript\">var marked = require('marked');\nvar renderer = new marked.Renderer();\n\nrenderer.heading = function (text, level) {\n var escapedText = text.toLowerCase().replace(/[^\\w]+/g, '-');\n\n return '&lt;h' + level + '&gt;&lt;a name=\"' +\n escapedText +\n '\" class=\"anchor\" href=\"#' +\n escapedText +\n '\"&gt;&lt;span class=\"header-link\"&gt;&lt;/span&gt;&lt;/a&gt;' +\n text + '&lt;/h' + level + '&gt;';\n},\n\nconsole.log(marked('# heading+', { renderer: renderer }));\n</code></pre>\n<p>This code will output the following HTML:</p>\n<pre><code class=\"lang-html\">&lt;h1&gt;\n &lt;a name=\"heading-\" class=\"anchor\" href=\"#heading-\"&gt;\n &lt;span class=\"header-link\"&gt;&lt;/span&gt;\n &lt;/a&gt;\n heading+\n&lt;/h1&gt;\n</code></pre>\n<h4 id=\"block-level-renderer-methods\">Block level renderer methods</h4>\n<ul>\n<li>code(<em>string</em> code, <em>string</em> language)</li>\n<li>blockquote(<em>string</em> quote)</li>\n<li>html(<em>string</em> html)</li>\n<li>heading(<em>string</em> text, <em>number</em> level)</li>\n<li>hr()</li>\n<li>list(<em>string</em> body, <em>boolean</em> ordered)</li>\n<li>listitem(<em>string</em> text)</li>\n<li>paragraph(<em>string</em> text)</li>\n<li>table(<em>string</em> header, <em>string</em> body)</li>\n<li>tablerow(<em>string</em> content)</li>\n<li>tablecell(<em>string</em> content, <em>object</em> flags)</li>\n</ul>\n<p><code>flags</code> has the following properties:</p>\n<pre><code class=\"lang-js\">{\n header: true || false,\n align: 'center' || 'left' || 'right'\n}\n</code></pre>\n<h4 id=\"inline-level-renderer-methods\">Inline level renderer methods</h4>\n<ul>\n<li>strong(<em>string</em> text)</li>\n<li>em(<em>string</em> text)</li>\n<li>codespan(<em>string</em> code)</li>\n<li>br()</li>\n<li>del(<em>string</em> text)</li>\n<li>link(<em>string</em> href, <em>string</em> title, <em>string</em> text)</li>\n<li>image(<em>string</em> href, <em>string</em> title, <em>string</em> text)</li>\n</ul>\n<h3 id=\"gfm\">gfm</h3>\n<p>Type: <code>boolean</code>\nDefault: <code>true</code></p>\n<p>Enable <a href=\"https://help.github.com/articles/github-flavored-markdown\">GitHub flavored markdown</a>.</p>\n<h3 id=\"tables\">tables</h3>\n<p>Type: <code>boolean</code>\nDefault: <code>true</code></p>\n<p>Enable GFM <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#wiki-tables\">tables</a>.\nThis option requires the <code>gfm</code> option to be true.</p>\n<h3 id=\"breaks\">breaks</h3>\n<p>Type: <code>boolean</code>\nDefault: <code>false</code></p>\n<p>Enable GFM <a href=\"https://help.github.com/articles/github-flavored-markdown#newlines\">line breaks</a>.\nThis option requires the <code>gfm</code> option to be true.</p>\n<h3 id=\"pedantic\">pedantic</h3>\n<p>Type: <code>boolean</code>\nDefault: <code>false</code></p>\n<p>Conform to obscure parts of <code>markdown.pl</code> as much as possible. Don't fix any of\nthe original markdown bugs or poor behavior.</p>\n<h3 id=\"sanitize\">sanitize</h3>\n<p>Type: <code>boolean</code>\nDefault: <code>false</code></p>\n<p>Sanitize the output. Ignore any HTML that has been input.</p>\n<h3 id=\"smartlists\">smartLists</h3>\n<p>Type: <code>boolean</code>\nDefault: <code>true</code></p>\n<p>Use smarter list behavior than the original markdown. May eventually be\ndefault with the old behavior moved into <code>pedantic</code>.</p>\n<h3 id=\"smartypants\">smartypants</h3>\n<p>Type: <code>boolean</code>\nDefault: <code>false</code></p>\n<p>Use \"smart\" typograhic punctuation for things like quotes and dashes.</p>\n<h2 id=\"access-to-lexer-and-parser\">Access to lexer and parser</h2>\n<p>You also have direct access to the lexer and parser if you so desire.</p>\n<pre><code class=\"lang-js\">var tokens = marked.lexer(text, options);\nconsole.log(marked.parser(tokens));\n</code></pre>\n<pre><code class=\"lang-js\">var lexer = new marked.Lexer(options);\nvar tokens = lexer.lex(text);\nconsole.log(tokens);\nconsole.log(lexer.rules);\n</code></pre>\n<h2 id=\"cli\">CLI</h2>\n<pre><code class=\"lang-bash\">$ marked -o hello.html\nhello world\n^D\n$ cat hello.html\n&lt;p&gt;hello world&lt;/p&gt;\n</code></pre>\n<h2 id=\"philosophy-behind-marked\">Philosophy behind marked</h2>\n<p>The point of marked was to create a markdown compiler where it was possible to\nfrequently parse huge chunks of markdown without having to worry about\ncaching the compiled output somehow...or blocking for an unnecesarily long time.</p>\n<p>marked is very concise and still implements all markdown features. It is also\nnow fully compatible with the client-side.</p>\n<p>marked more or less passes the official markdown test suite in its\nentirety. This is important because a surprising number of markdown compilers\ncannot pass more than a few tests. It was very difficult to get marked as\ncompliant as it is. It could have cut corners in several areas for the sake\nof performance, but did not in order to be exactly what you expect in terms\nof a markdown rendering. In fact, this is why marked could be considered at a\ndisadvantage in the benchmarks above.</p>\n<p>Along with implementing every markdown feature, marked also implements <a href=\"http://github.github.com/github-flavored-markdown/\">GFM\nfeatures</a>.</p>\n<h2 id=\"benchmarks\">Benchmarks</h2>\n<p>node v0.8.x</p>\n<pre><code class=\"lang-bash\">$ node test --bench\nmarked completed in 3411ms.\nmarked (gfm) completed in 3727ms.\nmarked (pedantic) completed in 3201ms.\nrobotskirt completed in 808ms.\nshowdown (reuse converter) completed in 11954ms.\nshowdown (new converter) completed in 17774ms.\nmarkdown-js completed in 17191ms.\n</code></pre>\n<p><strong>Marked is now faster than Discount, which is written in C.</strong></p>\n<p>For those feeling skeptical: These benchmarks run the entire markdown test suite 1000 times. The test suite tests every feature. It doesn't cater to specific aspects.</p>\n<h3 id=\"pro-level\">Pro level</h3>\n<p>You also have direct access to the lexer and parser if you so desire.</p>\n<pre><code class=\"lang-js\">var tokens = marked.lexer(text, options);\nconsole.log(marked.parser(tokens));\n</code></pre>\n<pre><code class=\"lang-js\">var lexer = new marked.Lexer(options);\nvar tokens = lexer.lex(text);\nconsole.log(tokens);\nconsole.log(lexer.rules);\n</code></pre>\n<pre><code class=\"lang-bash\">$ node\n&gt; require('marked').lexer('&gt; i am using marked.')\n[ { type: 'blockquote_start' },\n { type: 'paragraph',\n text: 'i am using marked.' },\n { type: 'blockquote_end' },\n links: {} ]\n</code></pre>\n<h2 id=\"running-tests-contributing\">Running Tests &amp; Contributing</h2>\n<p>If you want to submit a pull request, make sure your changes pass the test\nsuite. If you're adding a new feature, be sure to add your own test.</p>\n<p>The marked test suite is set up slightly strangely: <code>test/new</code> is for all tests\nthat are not part of the original markdown.pl test suite (this is where your\ntest should go if you make one). <code>test/original</code> is only for the original\nmarkdown.pl tests. <code>test/tests</code> houses both types of tests after they have been\ncombined and moved/generated by running <code>node test --fix</code> or <code>marked --test\n--fix</code>.</p>\n<p>In other words, if you have a test to add, add it to <code>test/new/</code> and then\nregenerate the tests with <code>node test --fix</code>. Commit the result. If your test\nuses a certain feature, for example, maybe it assumes GFM is <em>not</em> enabled, you\ncan add <code>.nogfm</code> to the filename. So, <code>my-test.text</code> becomes\n<code>my-test.nogfm.text</code>. You can do this with any marked option. Say you want\nline breaks and smartypants enabled, your filename should be:\n<code>my-test.breaks.smartypants.text</code>.</p>\n<p>To run the tests:</p>\n<pre><code class=\"lang-bash\">cd marked/\nnode test\n</code></pre>\n<h3 id=\"contribution-and-license-agreement\">Contribution and License Agreement</h3>\n<p>If you contribute code to this project, you are implicitly allowing your code\nto be distributed under the MIT license. You are also implicitly verifying that\nall code is your original work. <code>&lt;/legalese&gt;</code></p>\n<h2 id=\"license\">License</h2>\n<p>Copyright (c) 2011-2014, Christopher Jeffrey. (MIT License)</p>\n<p>See LICENSE for more info.</p>\n<table>\n<thead>\n<tr>\n<th>对象</th>\n<th>属性/索引</th>\n<th>描述</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>result</td>\n<td>[0]</td>\n<td>正则表达式最后的匹配项</td>\n<td>dbBd</td>\n</tr>\n<tr>\n<td><code>[1], ...[<i>n</i>]</code></td>\n<td>子表达式匹配项</td>\n<td><code>[1] = bB<br>[2] = d</code></td>\n<td></td>\n</tr>\n<tr>\n<td>index</td>\n<td>第一个匹配项在原字符串中的索引</td>\n<td><code>1</code></td>\n<td>[2] = d</td>\n</tr>\n<tr>\n<td>input</td>\n<td>方法输入的参数字符串</td>\n<td><code>cdbBdbsbz</code></td>\n<td></td>\n</tr>\n<tr>\n<td><code>re</code></td>\n<td><code>lastIndex</code></td>\n<td>下一次执行匹配开始索引的位置.</td>\n<td><code>5</code></td>\n</tr>\n<tr>\n<td><code>re</code></td>\n<td>ignoreCase</td>\n<td>指\"<code>i</code>\" 标识是否启用</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>re</code></td>\n<td>global</td>\n<td>指\"<code>g</code>\" 标识是否启用</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><code>re</code></td>\n<td>multiline</td>\n<td>指\"<code>m</code>\" 标识是否启用</td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><code>re</code></td>\n<td>source</td>\n<td>正则表达式的文本表示</td>\n<td><code>d(b+)(d)</code></td>\n</tr>\n</tbody>\n</table>\n<pre><code class=\"lang-php\">&lt;?php\n\n/**\n * @监控队列长度脚本\n *\n * @author haitaoguo\n *\n * @date 2015-09-01\n */\nnamespace Mlservice\\Script\\Campaign;\n\n\nuse Mlservice\\Package\\Model\\ModelQueue;\nuse Mlservice\\Package\\Model\\ModelCleanCache;\n\nclass Monitor extends \\Framework\\FrameworkScript {\n public static $log_file = 'script_consume_campaign_log';\n public static $mailList = 'rd-mall@meilishuo.com';\n\n\n const CAMPAIGN_LIST = 1;//清理活动缓存队列\n\n\n const CAMPAIGN_DELAY = 2;//延迟清理活动活动队列\n\n const SALE_LIST=3;//销量脚本监控\n\n const INVENTORY_LIST=4;//库存队列脚本监控\n\n const CAMPAIGN_LONG = 5;//延迟清理活动活动队列 30分钟\n\n const CAMPAIGN_CHECK = 6;//延迟清理活动活动队列 30分钟\n /**\n *\n * @var array\n */\n private static $arr_conf = array(\n self::CAMPAIGN_LIST =&gt; array(\n //llen =&gt; 脚本 个数\n 'conf' =&gt; array(\n 500 =&gt; 2,\n 1000 =&gt; 4,\n 2000 =&gt; 6,\n 3000 =&gt; 8,\n 999999999 =&gt; 10,\n\n ),\n 'cmd' =&gt; array(\n 'cnt_cmd' =&gt; 'ps -ef| grep -v grep | grep \"script.php\" | grep \"campaign\" |grep \"Consume_campaign_list\" | wc -l',\n 'pid_cmd' =&gt; \"ps x| grep -v grep | grep 'script.php' | grep 'campaign'|grep 'Consume_campaign_list' |awk '{print $1}'\",\n 'run_cmd' =&gt; '/home/service/php/bin/php /home/work/mlservice/goods/public/script.php campaign\\\\\\Consume_campaign_list &gt; /dev/null &amp; ',\n ),\n 'type'=&gt;1,//启动进程\n 'mix' =&gt; 5000,\n 'msg'=&gt;'活动更新队列超过阈值5000，请查看',\n\n ),\n self::CAMPAIGN_DELAY =&gt; array(\n //llen =&gt; 脚本 个数\n 'conf' =&gt; array(\n 500 =&gt; 1,\n 1000 =&gt; 2,\n 2000 =&gt; 4,\n 3000 =&gt; 5,\n 999999999 =&gt; 10,\n\n ),\n 'cmd' =&gt; array(\n 'cnt_cmd' =&gt; 'ps -ef| grep -v grep | grep \"script.php\" | grep \"campaign\" |grep \"Consume_campaign_delay\" | wc -l',\n 'pid_cmd' =&gt; \"ps x| grep -v grep | grep 'script.php' | grep 'campaign'|grep 'Consume_campaign_delay' |awk '{print $1}'\",\n 'run_cmd' =&gt; '/home/service/php/bin/php /home/work/mlservice/goods/public/script.php campaign\\\\\\Consume_campaign_delay &gt; /dev/null &amp; ',\n ),\n 'type'=&gt;1,//启动进程\n 'mix' =&gt; 5000,\n 'msg'=&gt;'延迟活动更新队列超过阈值5000，请查看',\n ),\n self::CAMPAIGN_LONG =&gt; array(\n //llen =&gt; 脚本 个数\n 'conf' =&gt; array(\n 500 =&gt; 1,\n 3000 =&gt; 2,\n 10000 =&gt; 4,\n 30000 =&gt; 5,\n 999999999 =&gt; 10,\n\n ),\n 'cmd' =&gt; array(\n 'cnt_cmd' =&gt; 'ps -ef| grep -v grep | grep \"script.php\" | grep \"campaign\" |grep \"Consume_campaign_long\" | wc -l',\n 'pid_cmd' =&gt; \"ps x| grep -v grep | grep 'script.php' | grep 'campaign'|grep 'Consume_campaign_long' |awk '{print $1}'\",\n 'run_cmd' =&gt; '/home/service/php/bin/php /home/work/mlservice/goods/public/script.php campaign\\\\\\Consume_campaign_long &gt; /dev/null &amp; ',\n ),\n 'type'=&gt;1,//启动进程\n 'mix' =&gt; 25000,\n 'msg'=&gt;'延迟活动更新队列超过阈值25000，请查看',\n ),\n self::CAMPAIGN_CHECK =&gt; array(\n //llen =&gt; 脚本 个数\n 'conf' =&gt; array(\n 500 =&gt; 1,\n 3000 =&gt; 2,\n 10000 =&gt; 4,\n 30000 =&gt; 5,\n 999999999 =&gt; 10,\n\n ),\n 'cmd' =&gt; array(\n 'cnt_cmd' =&gt; 'ps -ef| grep -v grep | grep \"script.php\" | grep \"campaign\" |grep \"Consume_campaign_check\" | wc -l',\n 'pid_cmd' =&gt; \"ps x| grep -v grep | grep 'script.php' | grep 'campaign'|grep 'Consume_campaign_check' |awk '{print $1}'\",\n 'run_cmd' =&gt; '/home/service/php/bin/php /home/work/mlservice/goods/public/script.php campaign\\\\\\Consume_campaign_check &gt; /dev/null &amp; ',\n ),\n 'type'=&gt;1,//启动进程\n 'mix' =&gt; 25000,\n 'msg'=&gt;'对比价格各个机房数据队列超过阈值25000，请查看',\n ),\n self::SALE_LIST =&gt; array(\n 'mix' =&gt; 5000,\n 'type'=&gt;2,//只报警\n 'msg'=&gt;'销量更新队列超过阈值5000，请查看',\n ),\n\n self::INVENTORY_LIST =&gt; array(\n 'mix' =&gt; 25000,\n 'type'=&gt;2,//只报警\n 'msg'=&gt;'库存更新队列超过阈值25000，请查看',\n ),\n );\n\n\n /**\n * 获取队列的长度\n * @param $key\n * @return bool\n */\n private function _get_queue_len($key) {\n switch ($key) {\n case self::CAMPAIGN_LIST:\n return ModelQueue::getCampaignListLen();\n case self::CAMPAIGN_DELAY:\n return ModelQueue::getCampaignDelayListLen();\n case self::CAMPAIGN_LONG:\n return ModelQueue::getCampaignLongListLen();\n case self::CAMPAIGN_CHECK:\n return ModelQueue::getCampaignCheckListLen();\n case self::SALE_LIST:\n return ModelQueue::getSaleListLen();\n case self::INVENTORY_LIST:\n return ModelQueue::getSkuListLen();\n }\n return false;\n\n }\n\n public function run() {\n $this-&gt;_init();\n\n\n }\n\n\n public function _init() {\n $cmd = 'ps -ef| grep -v grep | grep \"script.php\" | grep \"campaign\" |grep \"Monitor\" | wc -l';\n\n $res = array();\n exec($cmd, $res);\n $cmd_cnt = intval($res[0]);\n if ($cmd_cnt &gt; 1) {\n exit;\n }\n\n foreach (self::$arr_conf as $key =&gt; $v) {\n $list_len = $this-&gt;_get_queue_len($key);\n if($list_len&gt;$v['mix']){//报警\n $subjec=$v['msg'];\n $this-&gt;sendSm($subjec);\n $this-&gt;mailTo('goods服务监控队列报警', $subjec);\n }\n if($v['type']==1){//为1才执行 脚本重启\n $cmd = $v['cmd']['cnt_cmd'];\n $str_pid_cmd = $v['cmd']['pid_cmd'];// \"ps x| grep -v grep | grep 'script.php' | grep 'campaign'|grep 'Consume_campaign_list' |awk '{print $1}'\";\n $str_start_cmd = $v['cmd']['run_cmd'];// \"/home/service/php/bin/php /home/work/mlservice/goods/public/script.php campaign\\\\\\Consume_campaign_list &amp;\";\n $res = array();\n exec($cmd, $res);\n $cmd_cnt = intval($res[0]);\n if ($list_len !== false) {\n $todo_cnt = $this-&gt;_init_get_run_count($key, $list_len);\n $c_val = $todo_cnt - $cmd_cnt;\n\n\n if ($c_val &gt; 0) {//需要开启多个 脚本\n for ($i = 0; $i &lt; $c_val; $i++) {\n // echo \"running cmd \\t\" . $str_start_cmd . \"\\n\";\n $str = exec($str_start_cmd);\n // echo $str . \"\\n\";\n\n }\n } else {//脚本太多了 ，需要减少脚本 个数\n $arr_pid = array();\n exec($str_pid_cmd, $arr_pid);\n if (!empty($arr_pid)) {\n $c_val = abs($c_val);\n for ($i = 0; $i &lt; $c_val; $i++) {\n $str_kill = \" kill -9 \" . $arr_pid[$i];\n // echo \"kill cmd :\" . $str_kill . \"\\n\";\n exec($str_kill);\n\n }\n }\n\n }\n\n }\n }\n\n }\n exit;\n\n }\n\n /**\n * 获取需要执行 的脚本个数\n * @param $key\n * @param $list_len\n * @return int\n */\n private function _init_get_run_count($key, $list_len) {\n $last_size = 1;\n $arr_cnf = self::$arr_conf[$key]['conf'];\n foreach ($arr_cnf as $cnt =&gt; $len) {\n if ($list_len &lt; $cnt) {\n $last_size = $len;\n break;\n } else {\n $last_size = $len;\n }\n }\n return intval($last_size);\n }\n\n\n}\n</code></pre>\n",
          "updateTime": 1449931455202,
          "host": "孙俊杰",
          "tag": "FE",
          "formatDate": "2015-12-12 22:44:202",
          "__v": 0,
          "address": "波普",
          "_id": {
            "$oid": "566a9bdf28b3a0e54fc058da"
          },
          "createTime": 1449827295514,
          "act_title": "移动web开发分享",
          "desc": ""
        }, {
          "category": "bbox",
          "otime": "2015-12-11",
          "thumb_src": "",
          "mdContent": "#现有问题\n###1.商家后台登录的cookie存储位置存在隐患\n###2.手机登录和pc登录严重耦合\n#现有登录流程图\n![新登录流程](http://bizfe.meilishuo.com/md-imgs/cd1bee9ae780ba2521775a895a74c166.png)\n#改版后的思路图\n###1.出于安全考略，之前的cookie都是中在主域名下的，而且主域名也不是https的这样会存在很大的安全隐患，所以要改成2级域名\n###2.手机端登录和pc登录存在严重的耦合，为了之后的安全以及策略的拓展实施解耦操作，分别通过两个接口登录，在权限操作上面，之前的权限虽然存得上面分开了，但是在代码里又被写在了一起，这次改版此处也需要解耦。\n![新版登录封装](http://bizfe.meilishuo.com/md-imgs/020193ae0d7a25c77872b1c44f4646a9.png)",
          "resource": "",
          "creator": "欧立楠",
          "participants": [
            "yanmingguo@meilishuo.com"
          ],
          "title": "login_new",
          "htmlContent": "<h1 id=\"-\">现有问题</h1>\n<h3 id=\"1-cookie-\">1.商家后台登录的cookie存储位置存在隐患</h3>\n<h3 id=\"2-pc-\">2.手机登录和pc登录严重耦合</h3>\n<h1 id=\"-\">现有登录流程图</h1>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/cd1bee9ae780ba2521775a895a74c166.png\" alt=\"新登录流程\"></p>\n<h1 id=\"-\">改版后的思路图</h1>\n<h3 id=\"1-cookie-https-2-\">1.出于安全考略，之前的cookie都是中在主域名下的，而且主域名也不是https的这样会存在很大的安全隐患，所以要改成2级域名</h3>\n<h3 id=\"2-pc-\">2.手机端登录和pc登录存在严重的耦合，为了之后的安全以及策略的拓展实施解耦操作，分别通过两个接口登录，在权限操作上面，之前的权限虽然存得上面分开了，但是在代码里又被写在了一起，这次改版此处也需要解耦。</h3>\n<p><img src=\"http://bizfe.meilishuo.com/md-imgs/020193ae0d7a25c77872b1c44f4646a9.png\" alt=\"新版登录封装\"></p>\n",
          "updateTime": 1449826644906,
          "host": "立楠",
          "tag": "",
          "formatDate": "2015-12-11 17:37:906",
          "__v": 0,
          "address": "嬉皮会议室",
          "_id": {
            "$oid": "566a75850603cc879d55b61c"
          },
          "createTime": 1449817477686,
          "act_title": "登录重构",
          "desc": "由于安全需要，现在的中cookie的方式以及登录的方式容易造成cookie泄漏，现在需要改版登录把cookie都中到2级域名下，用的是https这样会安全一些，以及检验方法封装成公共方法，用于登陆后里面一些重要功能的安全验证"
        }, {
          "category": "bbox",
          "otime": "",
          "thumb_src": "",
          "mdContent": "# 代码健壮性讲解\n\n## 1、case背景\n\n * （1）按最近更新时间增量更新Sphinx索引源数据，每分钟检索最近3分钟内有更新过数据的商品\n * （2）最近时间范围内更新或新增的数据量可能会很大，就需要用到分页来处理：新增、或更新数据，有分页前后循环就会有交集\n * （3）在表被清空待填充数据的极端情况下，所有更新的数据都有可能被认定为新增的数据，即使插入数据前会判断是否已存在，但数据有主从延迟的话，影响较大\n * （4）数据初始化完成的情况下，新发布的商品时时同步到索引表中，此时的增量更新数据基本可认定为仅是更新数据 （特殊情况，脚本执行的时候，刚好有批量的数据录入）\n * （5）按时间范围分段分页处理数据，大家可以考虑一下这样处理有什么好处（普通的处理方式可能直接按时间范围分页来处理了：数据量过多时，有严重弊端）\n\n## 2、版本-1\n * 更新数据时容易造成拥堵，偶发锁表现象\n * 如果同一秒新增或更新的数据量过多，超过分页limit，会造成死循环现象（比如：店铺，1003493 2015-11-20 10:30:09）\n\n```php\n<?php\n......\nprivate $_limit = 400;//一次查询MySQL\n......\n$orderBy = array('goods_etime' => false);\n$limit = array(\n 'offset' => 0,\n 'limit' => $this->_limit,\n);\n\n......\n$current_time = array_pop(array_values($dataTime));\n\n\n```\n \n \n## 3、版本-2\n * 解决了更新拥堵现象，降低锁表概率\n * 如果同一秒新增的数据过多，在上一次和下一次的循环交集处容易造成重复插入数据报错的概率存在 \n \n```php\n<?php\n......\nprivate $_limit = 100;//一次查询MySQL\n......\n\n$orderBy = array('goods_etime' => false,'goods_id' => false);\n$limit = array(\n 'offset' => $page * $this->_limit,\n 'limit' => $this->_limit,\n);\n\n......\n\n//不存在的则插入数据\nif(!empty($no_exist_data)){\n sleep(1); //此处只是为了插入时的缓冲,减少重复插入的类似报警\n}\n\n......\n\n$current_time = array_pop(array_values($dataTime));\nif(strtotime($current_time) == strtotime($next_start_time)){//说明当前秒数内的数据太多\n $page++;\n if($perpage < $this->_limit){\n $next_start_time = date(\"Y-m-d H:i:s\", strtotime($current_time)+1);//下次循环+1秒\n $page = 0;\n $perpage = $this->_limit;//为了让其能继续往下执行\n }else{\n $next_start_time = $current_time;\n }\n}else{\n $next_start_time = $current_time;\n}\n\n```\n\n## 4、最终代码\n* 目测能彻底解决以上存在的各种问题\n\n\n```php\n<?php\nnamespace Mlservice\\Script\\Goods;\n\nuse Mlservice\\Package\\Model\\ModelGoodsInfoSph;\nuse Mlservice\\Package\\Table\\TableBrdGoodsInfo;\nuse Framework\\Libs\\Util\\Common\\ProcessArray;\n/**\n * @purpose 增量更新数据初始化 商品基础信息到sphinx索引源表 from db brd_goods_info to brd_goods_info_sph\n * \n * * /1 * * * * /home/service/php/bin/php /home/work/mlservice/goods/public/script.php goods\\\\Init_recent_goods_base_info_sph 3\n * \n * @author ningli\n * @date 2015-10-20\n */\n ini_set ( 'display_errors', 1 );\n error_reporting ( E_ALL );\nclass Init_recent_goods_base_info_sph extends \\Framework\\FrameworkScript {\n public static $log_file = 'script_init_recent_goods_base_info_log';\n private $_limit = 100;//一次查询MySQL\n private $current_m = null;//当前传过来的分钟数参数\n private $recent_max_m = 14400; //允许扫描最近更新的最大分钟数 最大24小时,为了保证在初始化全部数据期间有数据更新的也能被更新进来 (调整为10天)\n private $dateTime = 0;//距离当前时间的时间间隔点\n private $error_goods = '';\n \n public function run() {\n $this->_init();\n // 检查脚本可执行\n $this->checkCluster();\n \n //static::$mailList = 'ningli@meilishuo.com';\n isset($this->args[0]) && $this->current_m=(int)$this->args[0];//确定传过来的分钟数\n if($this->current_m > $this->recent_max_m || !isset($this->current_m)){\n //$this->current_m = 5; //默认5分钟\n echo '超过最大扫描时间范围10天';\n return false;\n }\n \n $this->dateTime = date('Y-m-d H:i:s', (time() - $this->current_m * 60));\n \n $goods_ids = !empty($this->args[1]) ? explode(',', $this->args[1]) : array();\n $shop_ids = !empty($this->args[2]) ? explode(',', $this->args[2]) : array();\n \n $perpage = $this->_limit;\n $i = 0;\n //$page = 0;\n $n = 0;\n $next_start_time = $this->dateTime;\n while ($perpage == $this->_limit) {\n //$fields = array('twitter_id', 'goods_id', 'shop_id', 'user_id' ,'sort_id', 'goods_title', 'goods_status', 'sale_num' ,'goods_no', 'goods_ctime', 'expected_delivery_date', 'goods_price', 'max_price' ,'goods_on_shelf');\n $fields = ModelGoodsInfoSph::$batchInsertFields;\n $fields[] = 'goods_etime';//商品更新时间\n if (empty($goods_ids)) {\n $where = array(\n 'goods_etime' => array(\n 'op' => '>=', //相同秒数的商品有可能数量比较多超过了分页$this->_limit,所以此处用>=; 但又会造成循环中有重复读取数据的,所以下面新插入数据的时候,要做相应处理\n 'value' => $next_start_time,\n ),\n );\n } else {\n $where = array(\n 'goods_id' => $goods_ids,\n );\n //如果第三个参数为真时,shop_id\n if(!empty($shop_ids)){\n $where = array(\n 'shop_id' => $shop_ids,\n );\n }\n }\n $orderBy = array('goods_etime' => false,'goods_id' => false);\n $limit = array(\n //'offset' => $n + $page * $this->_limit,\n 'offset' => $n,\n 'limit' => $this->_limit,\n );\n //如果第三个参数为真时,shop_id\n if(!empty($shop_ids)){\n $limit = array(\n 'offset' => 0,\n 'limit' => 2000,\n );\n }\n \n $goods_info = TableBrdGoodsInfo::select($fields, $where, array(), $orderBy, $limit);\n \n $data = ProcessArray::parseArrayToKeyValue($goods_info, 'goods_id', 'twitter_id');\n $dataTime = ProcessArray::parseArrayToKeyValue($goods_info, 'goods_id', 'goods_etime');\n $perpage = count($data);\n if ($perpage > 0) {\n $goods_ids_current = array_keys($data);\n $sph_where = array(\n 'goods_id' => $goods_ids_current\n );\n $sph_fields = array('twitter_id', 'goods_id', 'shop_id',);\n $sph_ret = ModelGoodsInfoSph::getGoodsList($sph_fields, $sph_where);\n $has_exist_goods = ProcessArray::parseArrayToKeyValue($sph_ret, 'goods_id', 'twitter_id');\n \n //$next_start_time = array_pop(array_values($dataTime));\n $current_time = array_pop(array_values($dataTime));//最后一个数据的更新时间\n \n if(strtotime($current_time) != strtotime($next_start_time)){\n $n = 0;\n }\n \n //$this->addScriptLog('已经存在的数据:'. json_encode($has_exist_goods));\n /**\n * 判断数据是否已经存在brd_goods_info_sph表中\n */\n $exist_data = array();\n $no_exist_data = array();\n foreach ($goods_info as $k => $v) {\n if(!empty($has_exist_goods[$v['goods_id']])){//说明数据已存在,只更新非时时字段\n $exist_data[$v['goods_id']]['sort_id'] = $v['sort_id'];\n $exist_data[$v['goods_id']]['goods_title'] = $v['goods_title'];\n $exist_data[$v['goods_id']]['sale_num'] = $v['sale_num'];\n $exist_data[$v['goods_id']]['goods_no'] = $v['goods_no'];\n //$exist_data[$v['goods_id']]['expected_delivery_date'] = $v['expected_delivery_date'];\n $exist_data[$v['goods_id']]['goods_price'] = $v['goods_price'];\n $exist_data[$v['goods_id']]['max_price'] = $v['max_price'];\n $exist_data[$v['goods_id']]['goods_on_shelf'] = $v['goods_on_shelf'];\n $exist_data[$v['goods_id']]['goods_last_off_shelf'] = $v['goods_last_off_shelf'];\n }else{\n unset($v['goods_etime']);//插入时去掉\n $no_exist_data[$v['goods_id']] = $v;\n }\n \n /**\n * 上一次和下一次的循环交集处,处理\n */\n //if(strtotime($v['goods_etime']) == $current_time && $page == 0){\n if(strtotime($v['goods_etime']) == strtotime($current_time)){\n $n++;\n }\n }\n $fail_str = '';\n //已经存在的数据则更新数据\n //$update_res = $this->updateData($exist_data);\n $update_res = ModelGoodsInfoSph::batchUpdateSphInfo($exist_data);\n \n //不存在的则插入数据\n if(!empty($no_exist_data)){\n sleep(1); //此处只是为了插入时的缓冲,减少重复插入的类似报警: binds [] raise error 23000 1062 Duplicate entry '277723645' for key 'goods_id'\n }\n $insert_res = ModelGoodsInfoSph::batchInsertSphInfo($no_exist_data);\n \n if(!empty($exist_data) && ($update_res == '-1' || $update_res === FALSE)){//说明批量更新失败\n $fail_str .= \"\\n|增量更新数据|批量更新失败的goods_id:\".implode(',', array_keys($exist_data)).\"\\n\";\n /**\n * 发邮件人工手动处理\n */\n $this->error_goods .= implode(',', array_keys($exist_data));\n }\n if(!empty($no_exist_data) && ($insert_res == '-1' || $insert_res=== FALSE)){//说明插入失败\n $fail_str .= \"\\n|增量更新数据|插入失败的goods_id:\".implode(',', array_keys($no_exist_data)).\"\\n\";\n /**\n * 发邮件人工手动处理\n */\n $this->error_goods .= implode(',', array_keys($no_exist_data));\n }\n \n $this->addScriptLog('当前执行的时间区间:'.$next_start_time);\n $next_start_time = $current_time;\n \n $log_str = '';\n if(!empty($exist_data)){\n $log_str .= \"|update_res:\".json_encode($update_res);\n }\n if(!empty($no_exist_data)){\n $log_str .= \"|insert_res:\".json_encode($insert_res);\n }\n $this->addScriptLog('~~'.$next_start_time.\"|数据执行的结果:\".$log_str.$fail_str.\"|limit:\". json_encode($limit));\n \n $i++;\n if ($i % 2) {\n sleep(1);\n }\n \n }else{\n echo \"最近\".$this->current_m.\"分钟内没有数据更新\";\n }\n }\n \n if($this->error_goods) {\n $content = \"增量更新商品基础数据时失败的goods_id:\".$this->error_goods.\"<br /> 请RD确认是否需要人工修复,如果需要修复,可到脚本机参照如下进行操作: <br /> /home/service/php/bin/php /home/work/mlservice/goods/public/script.php goods\\\\Init_recent_goods_base_info_sph 5 goods_id1,goods_id2,goods_id3....\";\n $this->mailTo('更新sphinx索引源表,出问题的数据信息',$content);\n }\n }\n \n public function _init() {\n $cmd = 'ps -ef | grep -v grep | grep \"script.php\" | grep \"Init_recent_goods_base_info_sph '.$this->current_m.'\" | wc -l';\n $res = array();\n exec($cmd, $res);\n if ($res[0] > 1) {//只 要 一个脚本执行,至少1,还有自身\n exit;\n }\n }\n \n}\n\n```\n\n",
          "resource": "",
          "creator": "李宁",
          "participants": [
            "yanmingguo@meilishuo.com"
          ],
          "title": "code_robustness_case1",
          "htmlContent": "<h1 id=\"-\">代码健壮性讲解</h1>\n<h2 id=\"1-case-\">1、case背景</h2>\n<ul>\n<li>（1）按最近更新时间增量更新Sphinx索引源数据，每分钟检索最近3分钟内有更新过数据的商品</li>\n<li>（2）最近时间范围内更新或新增的数据量可能会很大，就需要用到分页来处理：新增、或更新数据，有分页前后循环就会有交集</li>\n<li>（3）在表被清空待填充数据的极端情况下，所有更新的数据都有可能被认定为新增的数据，即使插入数据前会判断是否已存在，但数据有主从延迟的话，影响较大</li>\n<li>（4）数据初始化完成的情况下，新发布的商品时时同步到索引表中，此时的增量更新数据基本可认定为仅是更新数据 （特殊情况，脚本执行的时候，刚好有批量的数据录入）</li>\n<li>（5）按时间范围分段分页处理数据，大家可以考虑一下这样处理有什么好处（普通的处理方式可能直接按时间范围分页来处理了：数据量过多时，有严重弊端）</li>\n</ul>\n<h2 id=\"2-1\">2、版本-1</h2>\n<ul>\n<li>更新数据时容易造成拥堵，偶发锁表现象</li>\n<li>如果同一秒新增或更新的数据量过多，超过分页limit，会造成死循环现象（比如：店铺，1003493 2015-11-20 10:30:09）</li>\n</ul>\n<pre><code class=\"lang-php\">&lt;?php\n......\nprivate $_limit = 400;//一次查询MySQL\n......\n$orderBy = array('goods_etime' =&gt; false);\n$limit = array(\n 'offset' =&gt; 0,\n 'limit' =&gt; $this-&gt;_limit,\n);\n\n......\n$current_time = array_pop(array_values($dataTime));\n</code></pre>\n<h2 id=\"3-2\">3、版本-2</h2>\n<ul>\n<li>解决了更新拥堵现象，降低锁表概率</li>\n<li>如果同一秒新增的数据过多，在上一次和下一次的循环交集处容易造成重复插入数据报错的概率存在 </li>\n</ul>\n<pre><code class=\"lang-php\">&lt;?php\n......\nprivate $_limit = 100;//一次查询MySQL\n......\n\n$orderBy = array('goods_etime' =&gt; false,'goods_id' =&gt; false);\n$limit = array(\n 'offset' =&gt; $page * $this-&gt;_limit,\n 'limit' =&gt; $this-&gt;_limit,\n);\n\n......\n\n//不存在的则插入数据\nif(!empty($no_exist_data)){\n sleep(1); //此处只是为了插入时的缓冲,减少重复插入的类似报警\n}\n\n......\n\n$current_time = array_pop(array_values($dataTime));\nif(strtotime($current_time) == strtotime($next_start_time)){//说明当前秒数内的数据太多\n $page++;\n if($perpage &lt; $this-&gt;_limit){\n $next_start_time = date(\"Y-m-d H:i:s\", strtotime($current_time)+1);//下次循环+1秒\n $page = 0;\n $perpage = $this-&gt;_limit;//为了让其能继续往下执行\n }else{\n $next_start_time = $current_time;\n }\n}else{\n $next_start_time = $current_time;\n}\n</code></pre>\n<h2 id=\"4-\">4、最终代码</h2>\n<ul>\n<li>目测能彻底解决以上存在的各种问题</li>\n</ul>\n<pre><code class=\"lang-php\">&lt;?php\nnamespace Mlservice\\Script\\Goods;\n\nuse Mlservice\\Package\\Model\\ModelGoodsInfoSph;\nuse Mlservice\\Package\\Table\\TableBrdGoodsInfo;\nuse Framework\\Libs\\Util\\Common\\ProcessArray;\n/**\n * @purpose 增量更新数据初始化 商品基础信息到sphinx索引源表 from db brd_goods_info to brd_goods_info_sph\n * \n * * /1 * * * * /home/service/php/bin/php /home/work/mlservice/goods/public/script.php goods\\\\Init_recent_goods_base_info_sph 3\n * \n * @author ningli\n * @date 2015-10-20\n */\n ini_set ( 'display_errors', 1 );\n error_reporting ( E_ALL );\nclass Init_recent_goods_base_info_sph extends \\Framework\\FrameworkScript {\n public static $log_file = 'script_init_recent_goods_base_info_log';\n private $_limit = 100;//一次查询MySQL\n private $current_m = null;//当前传过来的分钟数参数\n private $recent_max_m = 14400; //允许扫描最近更新的最大分钟数 最大24小时,为了保证在初始化全部数据期间有数据更新的也能被更新进来 (调整为10天)\n private $dateTime = 0;//距离当前时间的时间间隔点\n private $error_goods = '';\n\n public function run() {\n $this-&gt;_init();\n // 检查脚本可执行\n $this-&gt;checkCluster();\n\n //static::$mailList = 'ningli@meilishuo.com';\n isset($this-&gt;args[0]) &amp;&amp; $this-&gt;current_m=(int)$this-&gt;args[0];//确定传过来的分钟数\n if($this-&gt;current_m &gt; $this-&gt;recent_max_m || !isset($this-&gt;current_m)){\n //$this-&gt;current_m = 5; //默认5分钟\n echo '超过最大扫描时间范围10天';\n return false;\n }\n\n $this-&gt;dateTime = date('Y-m-d H:i:s', (time() - $this-&gt;current_m * 60));\n\n $goods_ids = !empty($this-&gt;args[1]) ? explode(',', $this-&gt;args[1]) : array();\n $shop_ids = !empty($this-&gt;args[2]) ? explode(',', $this-&gt;args[2]) : array();\n\n $perpage = $this-&gt;_limit;\n $i = 0;\n //$page = 0;\n $n = 0;\n $next_start_time = $this-&gt;dateTime;\n while ($perpage == $this-&gt;_limit) {\n //$fields = array('twitter_id', 'goods_id', 'shop_id', 'user_id' ,'sort_id', 'goods_title', 'goods_status', 'sale_num' ,'goods_no', 'goods_ctime', 'expected_delivery_date', 'goods_price', 'max_price' ,'goods_on_shelf');\n $fields = ModelGoodsInfoSph::$batchInsertFields;\n $fields[] = 'goods_etime';//商品更新时间\n if (empty($goods_ids)) {\n $where = array(\n 'goods_etime' =&gt; array(\n 'op' =&gt; '&gt;=', //相同秒数的商品有可能数量比较多超过了分页$this-&gt;_limit,所以此处用&gt;=; 但又会造成循环中有重复读取数据的,所以下面新插入数据的时候,要做相应处理\n 'value' =&gt; $next_start_time,\n ),\n );\n } else {\n $where = array(\n 'goods_id' =&gt; $goods_ids,\n );\n //如果第三个参数为真时,shop_id\n if(!empty($shop_ids)){\n $where = array(\n 'shop_id' =&gt; $shop_ids,\n );\n }\n }\n $orderBy = array('goods_etime' =&gt; false,'goods_id' =&gt; false);\n $limit = array(\n //'offset' =&gt; $n + $page * $this-&gt;_limit,\n 'offset' =&gt; $n,\n 'limit' =&gt; $this-&gt;_limit,\n );\n //如果第三个参数为真时,shop_id\n if(!empty($shop_ids)){\n $limit = array(\n 'offset' =&gt; 0,\n 'limit' =&gt; 2000,\n );\n }\n\n $goods_info = TableBrdGoodsInfo::select($fields, $where, array(), $orderBy, $limit);\n\n $data = ProcessArray::parseArrayToKeyValue($goods_info, 'goods_id', 'twitter_id');\n $dataTime = ProcessArray::parseArrayToKeyValue($goods_info, 'goods_id', 'goods_etime');\n $perpage = count($data);\n if ($perpage &gt; 0) {\n $goods_ids_current = array_keys($data);\n $sph_where = array(\n 'goods_id' =&gt; $goods_ids_current\n );\n $sph_fields = array('twitter_id', 'goods_id', 'shop_id',);\n $sph_ret = ModelGoodsInfoSph::getGoodsList($sph_fields, $sph_where);\n $has_exist_goods = ProcessArray::parseArrayToKeyValue($sph_ret, 'goods_id', 'twitter_id');\n\n //$next_start_time = array_pop(array_values($dataTime));\n $current_time = array_pop(array_values($dataTime));//最后一个数据的更新时间\n\n if(strtotime($current_time) != strtotime($next_start_time)){\n $n = 0;\n }\n\n //$this-&gt;addScriptLog('已经存在的数据:'. json_encode($has_exist_goods));\n /**\n * 判断数据是否已经存在brd_goods_info_sph表中\n */\n $exist_data = array();\n $no_exist_data = array();\n foreach ($goods_info as $k =&gt; $v) {\n if(!empty($has_exist_goods[$v['goods_id']])){//说明数据已存在,只更新非时时字段\n $exist_data[$v['goods_id']]['sort_id'] = $v['sort_id'];\n $exist_data[$v['goods_id']]['goods_title'] = $v['goods_title'];\n $exist_data[$v['goods_id']]['sale_num'] = $v['sale_num'];\n $exist_data[$v['goods_id']]['goods_no'] = $v['goods_no'];\n //$exist_data[$v['goods_id']]['expected_delivery_date'] = $v['expected_delivery_date'];\n $exist_data[$v['goods_id']]['goods_price'] = $v['goods_price'];\n $exist_data[$v['goods_id']]['max_price'] = $v['max_price'];\n $exist_data[$v['goods_id']]['goods_on_shelf'] = $v['goods_on_shelf'];\n $exist_data[$v['goods_id']]['goods_last_off_shelf'] = $v['goods_last_off_shelf'];\n }else{\n unset($v['goods_etime']);//插入时去掉\n $no_exist_data[$v['goods_id']] = $v;\n }\n\n /**\n * 上一次和下一次的循环交集处,处理\n */\n //if(strtotime($v['goods_etime']) == $current_time &amp;&amp; $page == 0){\n if(strtotime($v['goods_etime']) == strtotime($current_time)){\n $n++;\n }\n }\n $fail_str = '';\n //已经存在的数据则更新数据\n //$update_res = $this-&gt;updateData($exist_data);\n $update_res = ModelGoodsInfoSph::batchUpdateSphInfo($exist_data);\n\n //不存在的则插入数据\n if(!empty($no_exist_data)){\n sleep(1); //此处只是为了插入时的缓冲,减少重复插入的类似报警: binds [] raise error 23000 1062 Duplicate entry '277723645' for key 'goods_id'\n }\n $insert_res = ModelGoodsInfoSph::batchInsertSphInfo($no_exist_data);\n\n if(!empty($exist_data) &amp;&amp; ($update_res == '-1' || $update_res === FALSE)){//说明批量更新失败\n $fail_str .= \"\\n|增量更新数据|批量更新失败的goods_id:\".implode(',', array_keys($exist_data)).\"\\n\";\n /**\n * 发邮件人工手动处理\n */\n $this-&gt;error_goods .= implode(',', array_keys($exist_data));\n }\n if(!empty($no_exist_data) &amp;&amp; ($insert_res == '-1' || $insert_res=== FALSE)){//说明插入失败\n $fail_str .= \"\\n|增量更新数据|插入失败的goods_id:\".implode(',', array_keys($no_exist_data)).\"\\n\";\n /**\n * 发邮件人工手动处理\n */\n $this-&gt;error_goods .= implode(',', array_keys($no_exist_data));\n }\n\n $this-&gt;addScriptLog('当前执行的时间区间:'.$next_start_time);\n $next_start_time = $current_time;\n\n $log_str = '';\n if(!empty($exist_data)){\n $log_str .= \"|update_res:\".json_encode($update_res);\n }\n if(!empty($no_exist_data)){\n $log_str .= \"|insert_res:\".json_encode($insert_res);\n }\n $this-&gt;addScriptLog('~~'.$next_start_time.\"|数据执行的结果:\".$log_str.$fail_str.\"|limit:\". json_encode($limit));\n\n $i++;\n if ($i % 2) {\n sleep(1);\n }\n\n }else{\n echo \"最近\".$this-&gt;current_m.\"分钟内没有数据更新\";\n }\n }\n\n if($this-&gt;error_goods) {\n $content = \"增量更新商品基础数据时失败的goods_id:\".$this-&gt;error_goods.\"&lt;br /&gt; 请RD确认是否需要人工修复,如果需要修复,可到脚本机参照如下进行操作: &lt;br /&gt; /home/service/php/bin/php /home/work/mlservice/goods/public/script.php goods\\\\Init_recent_goods_base_info_sph 5 goods_id1,goods_id2,goods_id3....\";\n $this-&gt;mailTo('更新sphinx索引源表,出问题的数据信息',$content);\n }\n }\n\n public function _init() {\n $cmd = 'ps -ef | grep -v grep | grep \"script.php\" | grep \"Init_recent_goods_base_info_sph '.$this-&gt;current_m.'\" | wc -l';\n $res = array();\n exec($cmd, $res);\n if ($res[0] &gt; 1) {//只 要 一个脚本执行,至少1,还有自身\n exit;\n }\n }\n\n}\n</code></pre>\n",
          "updateTime": 1449805726018,
          "host": "",
          "tag": "",
          "formatDate": "2015-12-11 11:48:18",
          "__v": 0,
          "address": "",
          "_id": {
            "$oid": "566109833e2e5b0a027e3808"
          },
          "createTime": 1449200003480,
          "act_title": "代码健壮性讲解",
          "desc": ""
        }],
        "message": "success",
        "cur_page": 0,
        "result": true,
        "total_num": 35
      });
    }, 1000);
  }
  this.body = res;
}